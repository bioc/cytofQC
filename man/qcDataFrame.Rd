% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qcDataFrame.R
\name{qcDataFrame}
\alias{qcDataFrame}
\title{Creates a \code{data.frame} that can be filled with the cell type information}
\usage{
qcDataFrame(x)
}
\arguments{
\item{x}{A \code{matrix} created with \code{\link{dataPrep}}. The data must
be unstandardized so that the Gaussian parameters with zero values can
be identified.}
}
\value{
A \code{data.frame} that contains the following variables:
\item{Time}{The time stamp from the original data. It is needed to ensure
that the QC measures can be matched with the original cell data.}
\item{label}{The final label for the cell. It is either cell, bead, GDPzero,
doublet, fragment, or dead. Initially, it is either 'cell' or 'GDPzero'.}
\item{bead}{The predicted probability that the observation is a bead based
on the classification model used. Initially, all values are NA.}
\item{doublet}{The predicted probability that the observation is a doublet
based on the classification model used. Initially, all values are NA.}
\item{debris}{The predicted probability that the observation is debris
based on the classification model used. Initially, all values are NA.}
\item{dead}{The predicted probability that the observation is dead based
on the classification model used. Initially, all values are NA.}
}
\description{
Creates a \code{data.frame} that can be filled with the cell type information
}
\details{
The \code{data.frame} that is returned has the time variable added so that
it can be matched up with the observations from the original CyTOF dataset.
The \code{label} is 'GDPzero' if any of the Gaussian parameters are 0, but
otherwise it is 'cell'. This \code{data.frame} is essentially empty and
needs to be filled in using one of the data cleaning model functions. The
labels will change to 'bead', 'doublet', 'fragment', or 'dead' and the
probabilities will be filled when the modeling functions are used.
}
\examples{
data("raw_data", package = "CATALYST")
tech <- dataPrep(raw_data, beads = 'Beads', viability = c('cisPt1','cisPt2'))
qcDataFrame(tech)

}
